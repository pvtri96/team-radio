version: 2
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:18.09.2
    steps:
      - checkout
      - setup_remote_docker
#      - run:
#          name: Install dependencies
#          command: |
#            apk add --no-cache \
#              py-pip=9.0.0-r1
#            pip install \
#              docker-compose==1.12.0 \
#              awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar
#      - run:
#          name: Run tests
#          command: |
#            docker-compose -f ./docker-compose.test.yml up
#      - deploy:
#          name: Push application Docker image
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "master" ]; then
#              login="$(aws ecr get-login)"
#              ${login}
#              docker tag app "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
#              docker push "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
#            fi
      - deploy:
          name: Deploy to Heroku
          command: |
            docker login --email=$HEROKU_EMAIL --password=$HEROKU_API_TOKEN registry.heroku.com
            docker tag app registry.heroku.com/$HEROKU_APP_NAME/web
            docker push registry.heroku.com/$HEROKU_APP_NAME/web
            heroku container:release --app $HEROKU_APP_NAME web
